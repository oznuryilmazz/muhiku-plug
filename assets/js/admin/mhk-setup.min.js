jQuery(function (m) {
  var p = {
    $setup_form: m(".muhiku-plug-setup--form"),
    $button_install: mhk_data.i18n_activating,
    init: function () {
      this.title_focus(),
        m(document).on(
          "click",
          ".muhiku-plug-template-install-addon",
          this.install_addon
        ),
        m(document).on(
          "click",
          ".muhiku-plug-builder-setup .upgrade-modal",
          this.message_upgrade
        ),
        m(document).on(
          "click",
          ".muhiku-plug-builder-setup .mhk-template-preview",
          this.template_preview
        ),
        this.$setup_form.on(
          "click",
          ".mhk-template-select",
          this.template_select
        ),
        m(document.body).on(
          "keypress",
          ".muhiku-plug-setup-form-name input",
          this.input_keypress
        );
    },
    title_focus: function () {
      setTimeout(function () {
        m("#muhiku-plug-setup-name").focus();
      }, 100);
    },
    install_addon: function (e) {
      var t = m(".plugins-list-table").find("#the-list tr"),
        n = m(e.target),
        r = 0,
        o = 0,
        i = [];
      wp.updates.maybeRequestFilesystemCredentials(e),
        m(".muhiku-plug-template-install-addon")
          .html(
            '<div class="mhk-loading mhk-loading-active"></div>' +
              p.$button_install
          )
          .prop("disabled", !0),
        m(document).trigger("wp-plugin-bulk-install", t),
        t.each(function (e, t) {
          t = m(t);
          t.hasClass("inactive") &&
            !t.find("notice-error").length &&
            wp.updates.queue.push({
              action: "everest_forms_install_extension",
              data: {
                page: pagenow,
                name: t.data("name"),
                slug: t.data("slug"),
              },
            });
        }),
        m(document).on(
          "wp-plugin-bulk-install-success wp-plugin-bulk-install-error",
          function (e, t) {
            var s,
              a = m('[data-slug="' + t.slug + '"]');
            "wp-" + t.install + "-bulk-install-success" === e.type
              ? r++
              : ((a = t.pluginName || a.find(".plugin-name").text()),
                o++,
                i.push(a + ": " + t.errorMessage)),
              (wp.updates.adminNotice = wp.template(
                "wp-bulk-installs-admin-notice"
              )),
              m(".muhiku-plug-recommend-addons .bulk-action-notice").remove(),
              m(".muhiku-plug-recommend-addons .plugins-info").after(
                wp.updates.adminNotice({
                  id: "bulk-action-notice",
                  className: "bulk-action-notice notice-alt",
                  successes: r,
                  errors: o,
                  errorMessages: i,
                  type: t.install,
                })
              ),
              (s = m("#bulk-action-notice").on("click", "button", function () {
                m(this)
                  .toggleClass("bulk-action-errors-collapsed")
                  .attr(
                    "aria-expanded",
                    !m(this).hasClass("bulk-action-errors-collapsed")
                  ),
                  s.find(".bulk-action-errors").toggleClass("hidden");
              })),
              wp.updates.queue.length ||
                (0 < o &&
                  n
                    .removeClass("updating-message")
                    .text(n.data("originaltext"))),
              0 === wp.updates.queue.length &&
                (m(".muhiku-plug-template-install-addon").remove(),
                m(
                  ".muhiku-plug-builder-setup .jconfirm-buttons button"
                ).show());
          }
        ),
        wp.updates.queueChecker();
    },
    message_upgrade: function (e) {
      var t = m(this).data("template-name-raw");
      e.preventDefault(),
        m.alert({
          title: t + " " + mhk_setup_params.upgrade_title,
          theme: "jconfirm-modern jconfirm-muhiku-plug",
          icon: "dashicons dashicons-lock",
          backgroundDismiss: !1,
          scrollToPreviousElement: !1,
          content: mhk_setup_params.upgrade_message,
          type: "red",
          boxWidth: "565px",
          buttons: {
            confirm: {
              text: mhk_setup_params.upgrade_button,
              btnClass: "btn-confirm",
              keys: ["enter"],
              action: function () {
                window.open(mhk_setup_params.upgrade_url, "_blank");
              },
            },
            cancel: { text: mhk_data.i18n_ok },
          },
        });
    },
    template_preview: function () {
      var e = m(this),
        t = e.data("preview-link");
      e.closest(".muhiku-plug-setup--form")
        .find(".mhk-template-preview-iframe #frame")
        .attr("src", t);
    },
    template_select: function (e) {
      var a = m(this),
        n = a.data("template"),
        r = a.data("template-name-raw"),
        o = "",
        i = mhk_setup_params.i18n_form_name,
        l =
          '<input autofocus="" type="text" id="muhiku-plug-setup-name" class="muhiku-plug-setup-name" placeholder="' +
          mhk_setup_params.i18n_form_placeholder +
          '">',
        u =
          '<p class="error">' + mhk_setup_params.i18n_form_error_name + "</p>";
      e.preventDefault(),
        ($target = m(e.target)),
        $target.hasClass("disabled") ||
          $target.hasClass("updating-message") ||
          m.confirm({
            title: mhk_setup_params.i18n_form_title,
            theme: "jconfirm-modern jconfirm-muhiku-plug-left",
            backgroundDismiss: !1,
            scrollToPreviousElement: !1,
            content: function () {
              var t = this,
                s = mhk_data.i18n_install_only;
              if (
                $target.closest(".mhk-template").find("span.muhiku-plug-badge")
                  .length
              ) {
                var e = {
                  action: "everest_forms_template_licence_check",
                  plan: a.attr("data-licence-plan").replace("-lifetime", ""),
                  slug: a.attr("data-template"),
                  security: mhk_setup_params.template_licence_check_nonce,
                };
                return m
                  .ajax({
                    url: mhk_email_params.ajax_url,
                    data: e,
                    type: "POST",
                  })
                  .done(function (e) {
                    t.setContentAppend(i + l + u + e.data.html),
                      e.data.activate
                        ? m(
                            ".muhiku-plug-builder-setup .jconfirm-buttons button"
                          ).show()
                        : (e.data.html.includes("install-now") &&
                            ((s = mhk_data.i18n_install_activate),
                            (p.$button_install = mhk_data.i18n_installing)),
                          (e =
                            '<a href="#" class="muhiku-plug-btn muhiku-plug-btn-primary muhiku-plug-template-install-addon">' +
                            s +
                            "</a>"),
                          m(
                            ".muhiku-plug-builder-setup .jconfirm-buttons"
                          ).append(e));
                  });
              }
              return (
                m(".muhiku-plug-builder-setup .jconfirm-buttons button").show(),
                i + l + u
              );
            },
            buttons: {
              Continue: {
                isHidden: !0,
                btnClass: "muhiku-plug-btn muhiku-plug-btn-primary",
                action: function () {
                  var e = m("#muhiku-plug-setup-name"),
                    t = m(".muhiku-plug-loader-overlay");
                  if (!e.val()) {
                    o = r;
                    var s = this.$content.find(".error");
                    return (
                      m(".muhiku-plug-setup-name")
                        .addClass("muhiku-plug-required")
                        .focus(),
                      s.show(),
                      !1
                    );
                  }
                  (o = e.val()), t.show();
                  e = {
                    title: o,
                    action: "everest_forms_create_form",
                    template: n,
                    security: mhk_setup_params.create_form_nonce,
                  };
                  m.post(mhk_setup_params.ajax_url, e, function (e) {
                    e.success
                      ? (window.location.href = e.data.redirect)
                      : (t.hide(),
                        m(".muhiku-plug-setup-name")
                          .addClass("muhiku-plug-required")
                          .focus(),
                        window.console.log(e));
                  }).fail(function (e) {
                    window.console.log(e.responseText);
                  });
                },
              },
            },
          });
    },
    input_keypress: function (e) {
      var t = e.keyCode || e.which;
      if (
        (m(this).removeClass("muhiku-plug-required"),
        13 === t && "input" === e.target.tagName.toLowerCase())
      )
        return e.preventDefault(), !1;
    },
  };
  p.init();
});
