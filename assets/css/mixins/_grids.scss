@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	@if $min {
		@media (min-width: $min) {
			@content;
		}
	}
	@else {
		@content;
	}
}

@mixin create-container($gutter: $grid-gutter) {
	width: 100%;
	padding-right: $gutter;
	padding-left: $gutter;
	margin-right: auto;
	margin-left: auto;

	*,
	::before,
	::after {
		box-sizing: border-box;
	}
}

@mixin create-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
	@each $breakpoint, $container-max-width in $max-widths {
		@include media-breakpoint-up($breakpoint, $breakpoints) {
			max-width: $container-max-width;
		}
	}
}

@mixin create-row($gutter: $grid-gutter) {
	display: flex;
	flex-wrap: wrap;
	margin-right: -$gutter;
	margin-left: -$gutter;
}

@mixin make-col-auto() {
	flex: 0 0 auto;
	width: auto;
}

@mixin make-col($size, $columns: $grid-columns) {
	flex: 0 0 percentage($size / $columns);
	max-width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
	$num: $size / $columns;
	margin-left: if($num == 0, 0, percentage($num));
}

@mixin row-cols($count) {
	& > * {
		flex: 0 0 auto;
		width: 100% / $count;
	}
}

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter, $breakpoints: $grid-breakpoints) {
	%grid-column {
		position: relative;
		width: 100%;
		padding-right: $gutter;
		padding-left: $gutter;
	}

	@each $breakpoint in map-keys($breakpoints) {
		$infix: breakpoint-infix($breakpoint, $breakpoints);

		@if $columns > 0 {
			@for $i from 1 through $columns {
				.mhk-col#{$infix}-#{$i} {
					@extend %grid-column;
				}
			}
		}

		.mhk-col#{$infix},
		.mhk-col#{$infix}-auto {
			@extend %grid-column;
		}

		@include media-breakpoint-up($breakpoint, $breakpoints) {
			.mhk-col#{$infix} {
				flex: 1 0 0%; 
			}

			.mhk-row-cols#{$infix}-auto > * {
				@include make-col-auto();
			}

			@if $grid-row-columns > 0 {
				@for $i from 1 through $grid-row-columns {
					.mhk-row-cols#{$infix}-#{$i} {
						@include row-cols($i);
					}
				}
			}

			.mhk-col#{$infix}-auto {
				@include make-col-auto();
			}

			@if $columns > 0 {
				@for $i from 1 through $columns {
					.mhk-col#{$infix}-#{$i} {
						@include make-col($i, $columns);
					}
				}

				@for $i from 0 through ($columns - 1) {
					@if not ($infix == '' and $i == 0) { 
						.mhk-offset#{$infix}-#{$i} {
							@include make-col-offset($i, $columns);
						}
					}
				}
			}

			@each $key, $value in $grid-spacers {
				.mhk-g#{$infix}-#{$key},
				.mhk-gx#{$infix}-#{$key} {
					--bs-gutter-x: #{$value};
				}

				.mhk-g#{$infix}-#{$key},
				.mhk-gy#{$infix}-#{$key} {
					--bs-gutter-y: #{$value};
				}
			}
		}
	}
}
