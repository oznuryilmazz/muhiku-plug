jQuery(function (n) {
  "use strict";
  n('form[data-ajax_submission="1"]').each(function (e, a) {
    n(document).ready(function () {
      var i = n(a),
        d = i.find(".mhk-submit"),
        e = i.find("[data-gateway*='stripe']");
      (0 < e.length && 0 === e.children.length) ||
        d.on("click", function (e) {
          var a = i
            .find(".muhiku-plug-stripe-gateways-tabs .mhk-tab")
            .has("a.active")
            .data("gateway");
          if (
            "stripe" !==
              (a =
                undefined === a
                  ? i
                      .find(".muhiku-plug-gateway[data-gateway='stripe']")
                      .data("gateway")
                  : a) ||
            "none" ===
              i
                .find(".muhiku-plug-gateway[data-gateway='ideal']")
                .closest(".mhk-field")
                .css("display")
          ) {
            "undefined" != typeof tinyMCE && tinyMCE.triggerSave();
            a = d.get(0).recaptchaID;
            if (0 === a) return grecaptcha.execute(a), !1;
            a = i.serializeArray();
            e.preventDefault(),
              i.trigger("focusout").trigger("change").trigger("submit");
            e = i.find(".mhk-error:visible");
            0 < e.length
              ? n([document.documentElement, document.body]).animate(
                  { scrollTop: e.last().offset().top },
                  800
                )
              : (n(this).html(i.data("process-text")),
                a.push({
                  name: "action",
                  value: "muhiku_forms_ajax_form_submission",
                }),
                a.push({
                  name: "security",
                  value:
                    muhiku_forms_ajax_submission_params.mhk_ajax_submission,
                }),
                n
                  .ajax({
                    url: muhiku_forms_ajax_submission_params.ajax_url,
                    type: "POST",
                    data: a,
                  })
                  .done(function (s, e, a) {
                    var t =
                      s.data && s.data.redirect_url ? s.data.redirect_url : "";
                    if (t)
                      return i.trigger("reset"), void (window.location = t);
                    if ("success" === s.data.response || !0 === s.success) {
                      let e = "",
                        a = "";
                      s.data.form_id !== undefined &&
                        s.data.entry_id !== undefined &&
                        1 == s.data.pdf_download &&
                        (e =
                          '<br><small><a href="/?page=mhk-entries-pdf&form_id=' +
                          s.data.form_id +
                          "&entry_id=" +
                          s.data.entry_id +
                          '">' +
                          s.data.pdf_download_message +
                          "</a></small>"),
                        1 == s.data.quiz_result_shown &&
                          (a = s.data.quiz_reporting);
                      var r = i
                        .find(".muhiku-plug-stripe-gateways-tabs .mhk-tab")
                        .has("a.active")
                        .data("gateway");
                      "ideal" !==
                        (r =
                          undefined === r
                            ? i
                                .find(
                                  ".muhiku-plug-gateway[data-gateway='ideal']"
                                )
                                .data("gateway")
                            : r) ||
                      "none" ===
                        i
                          .find(".muhiku-plug-gateway[data-gateway='ideal']")
                          .closest(".mhk-field")
                          .css("display")
                        ? (i.trigger("reset"),
                          i
                            .closest(".muhiku-plug")
                            .html(
                              '<div class="muhiku-plug-notice muhiku-plug-notice--success" role="alert">' +
                                s.data.message +
                                e +
                                "</div>" +
                                a
                            )
                            .focus(),
                          localStorage.removeItem(i.attr("id")))
                        : i.trigger("mhk_process_payment", s.data);
                    } else {
                      var o = i.data("formid"),
                        r = JSON.parse(a.responseText);
                      s =
                        "undefined" != typeof r.data[o]
                          ? r.data[o].header
                          : muhiku_forms_ajax_submission_params.error;
                      a = r.data.error;
                      "string" == typeof r.data.message && (s = r.data.message),
                        i
                          .closest(".muhiku-plug")
                          .find(".muhiku-plug-notice")
                          .remove(),
                        i
                          .closest(".muhiku-plug")
                          .prepend(
                            '<div class="muhiku-plug-notice muhiku-plug-notice--error" role="alert">' +
                              s +
                              "</div>"
                          )
                          .focus(),
                        n(a).each(function (e, a) {
                          var t,
                            s = Object.values(a)[0],
                            r = Object.keys(a)[0],
                            i = !0,
                            a = "mhk" - +o + "-field_" + r + "-container";
                          n("#" + a).hasClass("mhk-field-signature")
                            ? (t = n("#" + ("mhk-signature-img-input-" + r)))
                            : n("#" + a).hasClass("mhk-field-likert")
                            ? ((i = !1),
                              (t = n(
                                '[id^="' +
                                  ("muhiku_forms-" + o + "-field_" + r + "_") +
                                  '"]'
                              )).each(function (e, a) {
                                var s = n(a)
                                    .closest("tr.mhk-" + o + "-field_" + r)
                                    .find("th"),
                                  a =
                                    "muhiku_forms[form_fields][" +
                                    r +
                                    "][" +
                                    (parseInt(s.closest("tr").index()) + 1) +
                                    "]";
                                s.children().is("label")
                                  ? s
                                      .children()
                                      .find("#" + a)
                                      .show()
                                  : s.append(
                                      '<label id="' +
                                        a +
                                        '" for="' +
                                        a +
                                        '" class="mhk-error">' +
                                        muhiku_forms_ajax_submission_params.required +
                                        "</label>"
                                    );
                              }))
                            : n("#" + a).hasClass("mhk-field-address")
                            ? (t = n(
                                '[id^="' + ("mhk-" + o + "-field_" + r) + '"]'
                              )).each(function (e, a) {
                                var s = String(n(a).attr("id"));
                                (s.includes("-container") ||
                                  s.includes("-address2") ||
                                  void 0 !== n(a).val()) &&
                                  t.splice(e, 1);
                              })
                            : (t = n("#" + ("mhk-" + o + "-field_" + r))),
                            t.addClass("mhk-error"),
                            t.attr("aria-invalid", !0),
                            t
                              .first()
                              .closest(".mhk-field")
                              .addClass("muhiku-plug-invalid mhk-has-error"),
                            !0 !== i ||
                              t.is("label") ||
                              t
                                .after(
                                  '<label id="' +
                                    t.attr("id") +
                                    '-error" class="mhk-error" for="' +
                                    t.attr("id") +
                                    '">' +
                                    s +
                                    "</label>"
                                )
                                .show();
                        }),
                        d
                          .attr("disabled", !1)
                          .html(muhiku_forms_ajax_submission_params.submit);
                    }
                  })
                  .fail(function () {
                    d
                      .attr("disabled", !1)
                      .html(muhiku_forms_ajax_submission_params.submit),
                      i.trigger("focusout").trigger("change"),
                      i
                        .closest(".muhiku-plug")
                        .find(".muhiku-plug-notice")
                        .remove(),
                      i
                        .closest(".muhiku-plug")
                        .prepend(
                          '<div class="muhiku-plug-notice muhiku-plug-notice--error" role="alert">' +
                            muhiku_forms_ajax_submission_params.error +
                            "</div>"
                        )
                        .focus();
                  })
                  .always(function (e) {
                    !(e.data && e.data.redirect_url
                      ? e.data.redirect_url
                      : "") &&
                      n(".muhiku-plug-notice").length &&
                      n([document.documentElement, document.body]).animate(
                        { scrollTop: n(".muhiku-plug-notice").offset().top },
                        800
                      );
                  }));
          }
        });
    });
  });
});
