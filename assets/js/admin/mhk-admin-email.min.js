!(function (c) {
  var a,
    o = {
      settings: {
        form: c("#muhiku-plug-builder-form"),
        spinner: '<i class="mhk-loading mhk-loading-active" />',
      },
      init: function () {
        (a = this.settings),
          c(".muhiku-plug-active-email-connections-list li")
            .first()
            .addClass("active-user"),
          c(".mhk-content-email-settings-inner")
            .first()
            .addClass("active-connection"),
          o.bindUIActions();
      },
      ready: function () {
        a.formID = c("#muhiku-plug-builder-form").data("id");
      },
      bindUIActions: function () {
        c(document).on("click", ".muhiku-plug-email-add", function (e) {
          o.connectionAdd(this, e);
        }),
          c(document).on(
            "click",
            ".muhiku-plug-active-email-connections-list li",
            function (e) {
              o.selectActiveAccount(this, e);
            }
          ),
          c(document).on("click", ".email-remove", function (e) {
            o.removeAccount(this, e);
          }),
          c(document).on("click", ".email-default-remove", function (e) {
            o.removeDefaultAccount(this, e);
          }),
          c(document).on(
            "input",
            ".muhiku-plug-email-name input",
            function (e) {
              o.renameConnection(this, e);
            }
          ),
          c(document).on(
            "focusin",
            ".muhiku-plug-email-name input",
            function (e) {
              o.focusConnectionName(this, e);
            }
          ),
          c(document).on(
            "createEmailConnection",
            ".muhiku-plug-email-add",
            function (e, n) {
              o.addNewEmailConnection(c(this), n);
            }
          );
      },
      connectionAdd: function (e, n) {
        n.preventDefault();
        var i = c(e),
          n = i.data("type"),
          e = (e =
            mhk_email_params.i18n_email_connection +
            ('<input autofocus="" type="text" id="provider-connection-name" placeholder="' +
              mhk_email_params.i18n_email_placeholder +
              '">') +
            ('<p class="error">' +
              mhk_email_params.i18n_email_error_name +
              "</p>")).replace(/%type%/g, n);
        c.confirm({
          title: !1,
          content: e,
          icon: "dashicons dashicons-info",
          type: "blue",
          backgroundDismiss: !1,
          closeIcon: !1,
          buttons: {
            confirm: {
              text: mhk_email_params.i18n_email_ok,
              btnClass: "btn-confirm",
              keys: ["enter"],
              action: function () {
                var e = this.$content.find("input#provider-connection-name"),
                  n = this.$content.find(".error"),
                  e = e.val().trim();
                if (0 === e.length) return n.show(), !1;
                var t = e,
                  e = {
                    action: "muhiku_forms_new_email_add",
                    source: "email",
                    name: t,
                    id: a.form.data("id"),
                    security: mhk_email_params.ajax_email_nonce,
                  };
                c.ajax({
                  url: mhk_email_params.ajax_url,
                  data: e,
                  type: "POST",
                  success: function (e) {
                    o.addNewEmailConnection(i, { response: e, name: t });
                  },
                });
              },
            },
            cancel: { text: mhk_email_params.i18n_email_cancel },
          },
        });
      },
      addNewEmailConnection: function (e, n) {
        var t = e,
          i = n.response,
          a = n.name,
          e = t.closest(".muhiku-plug-panel-sidebar-content"),
          n =
            c("#muhiku-plug-panel-field-settings-form_title:first").val() +
            "-" +
            Date.now(),
          o = c(".mhk-content-email-settings").first().clone();
        c(".mhk-content-email-settings-inner").removeClass("active-connection"),
          o
            .find(
              'input:not(#qt_muhiku_forms_panel_field_email_connection_1_mhk_email_message_toolbar input[type="button"], .mhk_conditional_logic_container input)'
            )
            .val(""),
          o
            .find('.mhk_conditional_logic_container input[type="checkbox"]')
            .prop("checked", !1),
          o
            .find(
              '.muhiku-plug-attach-pdf-to-admin-email input[type="checkbox"]'
            )
            .prop("checked", !1),
          o
            .find(
              '.muhiku-plug-show-header-in-attachment-pdf-file input[type="checkbox"]'
            )
            .prop("checked", !1),
          o.find(".muhiku-plug-show-header-in-attachment-pdf-file").hide(),
          o.find(".muhiku-plug-show-pdf-file-name").hide(),
          o.find(".mhk-field-conditional-container").hide(),
          o.find(".mhk-field-conditional-wrapper li:not(:first)").remove(),
          o.find(".conditional_or:not(:first)").remove(),
          o.find(".muhiku-plug-email-name input").val(a),
          setTimeout(function () {
            o.find(".mhk-field-conditional-input").val("");
          }, 2e3),
          o
            .find(".mhk-content-email-settings-inner")
            .attr("data-connection_id", i.data.connection_id),
          o
            .find(".mhk-content-email-settings-inner")
            .removeClass("muhiku-plug-hidden"),
          o
            .find(".mhk-toggle-switch input")
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][enable_email_notification]"
            ),
          o
            .find(".mhk-toggle-switch input:checkbox")
            .attr("data-connection-id", i.data.connection_id),
          o.find(".mhk-toggle-switch input:checkbox").prop("checked", !0),
          o.find(".mhk-toggle-switch input:checkbox").val("1"),
          c(".mhk-content-email-settings .mhk-content-section-title").css(
            "display",
            "none"
          ),
          c(".email-disable-message").remove(),
          o.find(".email-disable-message").remove(),
          o
            .find(".mhk-toggle-switch")
            .parents(".mhk-content-section-title")
            .css("display", "flex"),
          o
            .find(".mhk-field-conditional-container")
            .attr("data-connection_id", i.data.connection_id),
          o
            .find("#muhiku-plug-panel-field-email-connection_1-connection_name")
            .attr(
              "name",
              "settings[email][" + i.data.connection_id + "][connection_name]"
            ),
          o
            .find("#muhiku-plug-panel-field-email-connection_1-mhk_to_email")
            .attr(
              "name",
              "settings[email][" + i.data.connection_id + "][mhk_to_email]"
            ),
          o
            .find("#muhiku-plug-panel-field-email-connection_1-mhk_to_email")
            .val("{admin_email}"),
          o
            .find("#muhiku-plug-panel-field-email-connection_1-mhk_carboncopy")
            .attr(
              "name",
              "settings[email][" + i.data.connection_id + "][mhk_carboncopy]"
            ),
          o
            .find(
              "#muhiku-plug-panel-field-email-connection_1-mhk_blindcarboncopy"
            )
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][mhk_blindcarboncopy]"
            ),
          o
            .find("#muhiku-plug-panel-field-email-connection_1-mhk_from_name")
            .attr(
              "name",
              "settings[email][" + i.data.connection_id + "][mhk_from_name]"
            ),
          o
            .find("#muhiku-plug-panel-field-email-connection_1-mhk_from_name")
            .val(mhk_email_params.from_name),
          o
            .find("#muhiku-plug-panel-field-email-connection_1-mhk_from_email")
            .attr(
              "name",
              "settings[email][" + i.data.connection_id + "][mhk_from_email]"
            ),
          o
            .find("#muhiku-plug-panel-field-email-connection_1-mhk_from_email")
            .val("{admin_email}"),
          o
            .find("#muhiku-plug-panel-field-email-connection_1-mhk_reply_to")
            .attr(
              "name",
              "settings[email][" + i.data.connection_id + "][mhk_reply_to]"
            ),
          o
            .find(
              "#muhiku-plug-panel-field-email-connection_1-mhk_email_subject"
            )
            .attr(
              "name",
              "settings[email][" + i.data.connection_id + "][mhk_email_subject]"
            ),
          o
            .find(
              "#muhiku-plug-panel-field-email-connection_1-mhk_email_subject"
            )
            .val(mhk_email_params.email_subject),
          o
            .find(
              "#muhiku_forms_panel_field_email_connection_1_mhk_email_message"
            )
            .attr(
              "name",
              "settings[email][" + i.data.connection_id + "][mhk_email_message]"
            ),
          o
            .find(
              "#muhiku_forms_panel_field_email_connection_1_mhk_email_message"
            )
            .val("{all_fields}"),
          o
            .find(
              "#muhiku-plug-panel-field-settingsemailconnection_1-attach_pdf_to_admin_email"
            )
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][attach_pdf_to_admin_email]"
            ),
          o
            .find(
              "#muhiku-plug-panel-field-settingsemailconnection_1-attach_pdf_to_admin_email"
            )
            .val(1),
          o
            .find(
              "#muhiku-plug-panel-field-settingsemailconnection_1-attach_pdf_to_admin_email"
            )
            .attr(
              "id",
              "muhiku-plug-panel-field-settingsemail" +
                i.data.connection_id +
                "-attach_pdf_to_admin_email"
            ),
          o
            .find(
              'label[for="muhiku-plug-panel-field-settingsemailconnection_1-attach_pdf_to_admin_email"]'
            )
            .attr(
              "for",
              "muhiku-plug-panel-field-settingsemail" +
                i.data.connection_id +
                "-attach_pdf_to_admin_email"
            ),
          o
            .find(
              'input[name="settings[email][connection_1][attach_pdf_to_admin_email]"]'
            )
            .remove(),
          o
            .find(
              "#muhiku-plug-panel-field-settingsemailconnection_1-show_header_in_attachment_pdf_file"
            )
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][show_header_in_attachment_pdf_file]"
            ),
          o
            .find(
              "#muhiku-plug-panel-field-settingsemailconnection_1-show_header_in_attachment_pdf_file"
            )
            .val(1),
          o
            .find(
              "#muhiku-plug-panel-field-settingsemailconnection_1-show_header_in_attachment_pdf_file"
            )
            .attr(
              "id",
              "muhiku-plug-panel-field-settingsemail" +
                i.data.connection_id +
                "-show_header_in_attachment_pdf_file"
            ),
          o
            .find(
              'label[for="muhiku-plug-panel-field-settingsemailconnection_1-show_header_in_attachment_pdf_file"]'
            )
            .attr(
              "for",
              "muhiku-plug-panel-field-settingsemail" +
                i.data.connection_id +
                "-show_header_in_attachment_pdf_file"
            ),
          o
            .find(
              'input[name="settings[email][connection_1][show_header_in_attachment_pdf_file]"]'
            )
            .remove(),
          o
            .find("#muhiku-plug-panel-field-settingsemailconnection_1-pdf_name")
            .attr(
              "name",
              "settings[email][" + i.data.connection_id + "][pdf_name]"
            ),
          o
            .find("#muhiku-plug-panel-field-settingsemailconnection_1-pdf_name")
            .val(n),
          o
            .find("#muhiku-plug-panel-field-settingsemailconnection_1-pdf_name")
            .attr(
              "id",
              "muhiku-plug-panel-field-settingsemail" +
                i.data.connection_id +
                "-pdf_name"
            ),
          o
            .find(".muhiku-plug-attach-pdf-to-admin-email")
            .attr(
              "id",
              "muhiku-plug-panel-field-settingsemailconnection_" +
                i.data.connection_id +
                "-attach_pdf_to_admin_email-wrap"
            ),
          o
            .find(".muhiku-plug-show-header-in-attachment-pdf-file ")
            .attr(
              "id",
              "muhiku-plug-panel-field-settingsemailconnection_" +
                i.data.connection_id +
                "-show_header_in_attachment_pdf_file-wrap"
            ),
          o
            .find(
              "#muhiku-plug-panel-field-email-connection_1-conditional_logic_status"
            )
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][conditional_logic_status]"
            ),
          o
            .find('.mhk_conditional_logic_container input[type="hidden"]')
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][conditional_logic_status]"
            ),
          o
            .find(".mhk-field-show-hide")
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][conditional_option]"
            ),
          o
            .find(".mhk-field-conditional-field-select")
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][conditionals][1][1][field]"
            ),
          o
            .find(".mhk-field-conditional-condition")
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][conditionals][1][1][operator]"
            ),
          o
            .find(".mhk-field-conditional-input")
            .attr(
              "name",
              "settings[email][" +
                i.data.connection_id +
                "][conditionals][1][1][value]"
            ),
          ($cloned_email = o.append(
            '<input type="hidden" name="settings[email][' +
              i.data.connection_id +
              '][connection_name]" value="' +
              a +
              '">'
          )),
          c(".mhk-email-settings-wrapper").append(o),
          e
            .find(".mhk-content-email-settings-inner")
            .last()
            .addClass("active-connection"),
          t
            .parent()
            .find(".muhiku-plug-active-email-connections-list li")
            .removeClass("active-user"),
          t
            .closest(".muhiku-plug-active-email.active")
            .children(".muhiku-plug-active-email-connections-list")
            .removeClass("empty-list"),
          t
            .parent()
            .find(".muhiku-plug-active-email-connections-list ")
            .append(
              '<li class="connection-list active-user" data-connection-id= "' +
                i.data.connection_id +
                '"><a class="user-nickname" href="#">' +
                a +
                '</a><a href="#"><span class="email-remove">Remove</span></a></li>'
            );
      },
      selectActiveAccount: function (e, n) {
        n.preventDefault();
        var t = c(e),
          n = t.data("connection-id"),
          e = c(".mhk-content-email-settings").find(
            '[data-connection_id="' + n + '"]'
          ),
          n = c(e).length;
        c(".mhk-content-email-settings")
          .find(".mhk-content-email-settings-inner")
          .removeClass("active-connection"),
          c(".mhk-content-section-title")
            .has(
              "[data-connection-id=" +
                t.siblings(".active-user").attr("data-connection-id") +
                "]"
            )
            .css("display", "none"),
          t.siblings().removeClass("active-user"),
          t.addClass("active-user"),
          n && c(e).addClass("active-connection"),
          c(".email-disable-message").remove(),
          0 ==
            c(
              "input[data-connection-id=" +
                t.attr("data-connection-id") +
                "]:last"
            ).prop("checked") &&
            c(
              '<p class="email-disable-message muhiku-plug-notice muhiku-plug-notice-info">' +
                mhk_data.i18n_email_disable_message +
                "</p>"
            ).insertAfter(
              c(".mhk-content-section-title").has(
                "[data-connection-id=" + t.attr("data-connection-id") + "]"
              )
            ),
          c(".mhk-content-section-title")
            .has("[data-connection-id=" + t.attr("data-connection-id") + "]")
            .css("display", "flex");
      },
      removeAccount: function (e, n) {
        n.preventDefault();
        var t = c(e),
          i = t.parent().parent().data("connection-id"),
          a = c(".mhk-content-email-settings").find(
            '[data-connection_id="' + i + '"]'
          ),
          o = c(a).length;
        c.confirm({
          title: !1,
          content: "Are you sure you want to delete this Email?",
          backgroundDismiss: !1,
          closeIcon: !1,
          icon: "dashicons dashicons-info",
          type: "orange",
          buttons: {
            confirm: {
              text: mhk_email_params.i18n_email_ok,
              btnClass: "btn-confirm",
              keys: ["enter"],
              action: function () {
                var e;
                o &&
                  ((e = t.parent().parent()),
                  (active_block_after = c(".mhk-provider-connections").find(
                    '[data-connection_id="' + i + '"]'
                  )),
                  (lengthOfActiveBlockAfter = c(a).length),
                  (e.prev().length
                    ? e.prev(".connection-list")
                    : e.next(".connection-list")
                  ).trigger("click"),
                  c(a).parent().remove(),
                  e.remove());
              },
            },
            cancel: { text: mhk_email_params.i18n_email_cancel },
          },
        });
      },
      removeDefaultAccount: function (e, n) {
        n.preventDefault,
          c.alert({
            title: !1,
            content: "Default Email can not be deleted !",
            icon: "dashicons dashicons-info",
            type: "blue",
            buttons: {
              ok: {
                text: mhk_data.i18n_ok,
                btnClass: "btn-confirm",
                keys: ["enter"],
              },
            },
          });
      },
      focusConnectionName: function (e, n) {
        e = c(e);
        e.data("val", e.val().trim());
      },
      renameConnection: function (e, n) {
        n.preventDefault;
        var t = c(e),
          e = t
            .closest(".mhk-content-email-settings-inner")
            .data("connection_id");
        ($active_block = c(".muhiku-plug-active-email-connections-list").find(
          '[data-connection-id="' + e + '"]'
        )),
          $active_block.find(".user-nickname").text(t.val()),
          0 === t.val().trim().length &&
            (t
              .parent(".muhiku-plug-email-name")
              .find(".muhiku-plug-error")
              .remove(),
            t
              .parent(".muhiku-plug-email-name")
              .append(
                '<p class="muhiku-plug-error muhiku-plug-text-danger">Email name cannot be empty.</p>'
              ),
            t.next(".muhiku-plug-error").fadeOut(3e3),
            setTimeout(function () {
              0 === t.val().length &&
                (t.val(t.data("val")),
                $active_block.find(".user-nickname").text(t.data("val")));
            }, 3e3));
      },
    };
  o.init();
})(jQuery);
